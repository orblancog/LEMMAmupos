#!/usr/bin/env python

#import math
import numpy
from numpy import mean, sqrt, square, subtract
import sys


x=[]
px=[]
y=[]
py=[]
t=[]
pt=[]

fl = open(sys.argv[1])# trackfile
for line in fl:
  sline = line.split(None)
  x.append(float(sline[2]))
  px.append(float(sline[3]))
  y.append(float(sline[4]))
  py.append(float(sline[5]))
  t.append(float(sline[6]))
  pt.append(float(sline[7]))

meanx  = mean(x)
meanpx = mean(px)
meany  = mean(y)
meanpy = mean(py)
meant  = mean(t)
meanpt = mean(pt)

# old
# print meanx, sqrt(mean(square(subtract(x, meanx)))),
# print meanpx,sqrt(mean(square(subtract(px,meanpx)))),
# print meany, sqrt(mean(square(subtract(y, meany)))),
# print meanpy,sqrt(mean(square(subtract(py,meanpy)))),
# print meant, sqrt(mean(square(subtract(t, meant)))),
# print meanpt,sqrt(mean(square(subtract(pt,meanpt))))

# new 


# mean substraction
liminf=0.025
limsup=0.975
ax   = numpy.sort(numpy.array(x) - meanx,axis=0) [int(len(x) *liminf)+1:int(len(x) *limsup)]
apx  = numpy.sort(numpy.array(px)- meanpx,axis=0)[int(len(px)*liminf)+1:int(len(px)*limsup)]
ay   = numpy.sort(numpy.array(y) - meany,axis=0) [int(len(y) *liminf)+1:int(len(y) *limsup)]
apy  = numpy.sort(numpy.array(py)- meanpy,axis=0)[int(len(py)*liminf)+1:int(len(py)*limsup)]
at   = numpy.sort(numpy.array(t) - meant,axis=0) [int(len(t) *liminf)+1:int(len(t) *limsup)]
apt  = numpy.sort(numpy.array(pt)- meanpt,axis=0)[int(len(pt)*liminf)+1:int(len(pt)*limsup)]

vax  = numpy.var(ax, dtype=numpy.float64)
vapx = numpy.var(apx,dtype=numpy.float64)
vay  = numpy.var(ay, dtype=numpy.float64)
vapy = numpy.var(apy,dtype=numpy.float64)
vat  = numpy.var(at, dtype=numpy.float64)
vapt = numpy.var(apt,dtype=numpy.float64)

corax = numpy.correlate(numpy.array(x),numpy.array(px),old_behavior=False)
coray = numpy.correlate(numpy.array(y),numpy.array(py),old_behavior=False)
corat = numpy.correlate(numpy.array(t),numpy.array(pt),old_behavior=False)

corax = numpy.corrcoef(numpy.array(x),numpy.array(px))[0,1]
coray = numpy.corrcoef(numpy.array(y),numpy.array(py))[0,1]
corat = numpy.corrcoef(numpy.array(t),numpy.array(pt))[0,1]

#print corax, coray, corat
#corax = 1
#coray = 1
#corat = 1

# old
# print meanx, sqrt(mean(square(subtract(x, meanx)))),
# print meanpx,sqrt(mean(square(subtract(px,meanpx)))),
# print meany, sqrt(mean(square(subtract(y, meany)))),
# print meanpy,sqrt(mean(square(subtract(py,meanpy)))),
# print meant, sqrt(mean(square(subtract(t, meant)))),
# print meanpt,sqrt(mean(square(subtract(pt,meanpt))))
#new
# check emittance calculation, it needs to be cut
print meanx, sqrt(vax),
print meanpx,sqrt(vapx),
print meany, sqrt(vay),
print meanpy,sqrt(vapy),
print meant, sqrt(vat),
print meanpt,sqrt(vapt),
print 'emit',
print float(sqrt(vax*vapx*(1-corax**2))), float(corax),
print float(sqrt(vay*vapy*(1-coray**2))), float(coray),
print float(sqrt(vat*vapt*(1-corat**2))), float(corat)
